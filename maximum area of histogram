 long long getMaxArea(long long arr[], int n)
    {
        // Your code here
         vector<ll>v1;
       stack<ll>s;
       for(int i=0;i<n;i++){
           if(s.size()==0){
               v1.push_back(-1);
           }
           else if(s.size()>0&&arr[s.top()]<arr[i]){
               v1.push_back(s.top());
           }
           else if(s.size()>0&&arr[s.top()]>=arr[i]){
               while(s.size()>0&&arr[s.top()]>=arr[i]){
                   s.pop();
               }
               if(s.size()==0){
                   v1.push_back(-1);
               }
               else{
                   v1.push_back(s.top());
               }
           }
           s.push(i);
       }
       while(s.size()>0){
           s.pop();
       }
       
         vector<ll>v2;
       for(int i=n-1;i>=0;i--){
           if(s.size()==0){
               v2.push_back(n);
           }
           else if(s.size()>0&&arr[s.top()]<arr[i]){
               v2.push_back(s.top());
           }
           else if(s.size()>0&&arr[s.top()]>=arr[i]){
               while(s.size()>0&&arr[s.top()]>=arr[i]){
                   s.pop();
               }
               if(s.size()==0){
                   v2.push_back(n);
               }
               else{
                   v2.push_back(s.top());
               }
           }
           s.push(i);
       }
       reverse(v2.begin(),v2.end());
       
       
        for(int i=0;i<n;i++){
            v2[i]-=v1[i];
            v2[i]-=1;
        }
       ll maxi=INT_MIN;
        for(int i=0;i<n;i++){
            if(maxi<v2[i]*arr[i]){
                maxi=v2[i]*arr[i];
            }
        }
        return maxi;
    }
